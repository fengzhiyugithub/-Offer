[题目链接](https://www.nowcoder.com/practice/8c82a5b80378478f9484d87d1c5f12a4?tpId=13&tqId=11161&tPage=1&rp=1&ru=%2Fta%2Fcoding-interviews&qru=%2Fta%2Fcoding-interviews%2Fquestion-ranking)

## 题目描述

一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法。

思路：根据题意分析，对于n>2，每一阶有2种跳法，所以f(n)=f(n-1)+f(n-2)，n>2，这不就是斐波那契数列吗，所以直接写。分析请见：[【剑指Offer】斐波那契数列（递归，DP）](https://blog.csdn.net/feng_zhiyu/article/details/80885392)。

ps：输出不同。

代码：

```cpp
class Solution {
public:
    int jumpFloor(int number) {
        int f = 0,g = 1;/// 
        while(number--) {
            g += f;
            f = g - f;
        }
        return g;
    }
};
```