[题目链接](https://www.nowcoder.com/practice/d0267f7f55b3412ba93bd35cfa8e8035?tpId=13&tqId=11156&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking)
题目描述
输入一个链表，从尾到头打印链表每个节点的值。

思路：从尾到头打印，符合后进先出，用栈存储，然后存入vector.O(n)

另外，递归本质也是栈结构，所以也可以用递归写。
代码【栈】：

```
/**
*  struct ListNode {
*        int val;
*        struct ListNode *next;
*        ListNode(int x) :
*              val(x), next(NULL) {
*        }
*  };
*/
class Solution {
public:
    vector<int>res;
    vector<int>& printListFromTailToHead(ListNode* head) {
        if(head!=nullptr) {
            if(head->next!=nullptr) {
                printListFromTailToHead(head->next);
            }
            res.push_back(head->val);
        }
        return res;
    }
};
```

代码【递归】：

   

```c++
/**
*  struct ListNode {
*        int val;
*        struct ListNode *next;
*        ListNode(int x) :
*              val(x), next(NULL) {
*        }
*  };
*/
class Solution {
public:
    vector<int>res;
    vector<int>& printListFromTailToHead(ListNode* head) {
        if(head!=nullptr) {
            if(head->next!=nullptr) {
                printListFromTailToHead(head->next);
            }
            res.push_back(head->val);
        }
        return res;
    }
};
```